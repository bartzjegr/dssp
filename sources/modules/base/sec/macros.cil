(in sec
	(block bool_obj_blk
		(blockabstract bool_obj_blk)

		(type bool)
		(call sec.bool_obj_type (bool))

		(tunableif enable_rbacsep
			(true
				(context bool_obj_context (sys.id sys.role bool (systemlow systemlow))))
			(false
				(context bool_obj_context (sys.id object_r bool (systemlow systemlow))))))

	(macro bool_obj_type ((type ARG1))
		(typeattributeset bool_obj_type_attribute ARG1))

	(macro search_fs ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(allow ARG1 securityfs.fs search_dir_perms))

	(macro dontaudit_list_fs ((type ARG1))
		(dontaudit ARG1 securityfs.fs list_dir_perms))

	(macro list_fs ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(allow ARG1 securityfs.fs list_dir_perms))

	(macro getattr_fs ((type ARG1))
		(allow ARG1 securityfs.fs (filesystem (getattr))))

	(macro remount_fs ((type ARG1))
		(allow ARG1 securityfs.fs (filesystem (remount))))

	(macro dontaudit_write_securityfs_files ((type ARG1))
		(dontaudit ARG1 securityfs.fs write_file_perms))

	(macro compute_access_vector ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (compute_av))))

	(macro compute_create_context ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (compute_create))))

	(macro compute_relabel_context ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (compute_relabel))))

	(macro compute_user_contexts ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (compute_user))))

	(macro get_enforce_mode ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call read_files_pattern (ARG1 securityfs.fs securityfs.fs)))

	(macro load_policy_subj_type ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(typeattributeset load_policy_subj_type_attribute ARG1)
		(booleanif (sec_load_policy) (true (allow ARG1 securityfs.fs (security (load_policy))))))

	(macro read_policy ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call read_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (read_policy))))

	(macro get_all_booleans ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(allow ARG1 securityfs.fs list_dir_perms)
		(allow ARG1 bool_obj_type_attribute read_file_perms))

	(macro set_all_booleans ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(allow ARG1 bool_obj_type_attribute read_file_perms)
		(allow ARG1 bool_obj_type_except_sec_load_policy_obj_type_attribute (file (append write)))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (setbool)))
		(booleanif (sec_load_policy) (true (allow ARG1 sec_load_policy.bool (file (append write))))))

	(macro set_spec_boolean ((type ARG1)(type ARG2))
		(call fs.search_sysfs (ARG1))
		(allow ARG1 ARG2 rw_file_perms)
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (setbool))))

	(macro set_check_req_prot ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (setcheckreqprot))))

	(macro set_enforce_mode ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(typeattributeset setenforce_subj_type_attribute ARG1)
		(booleanif (sec_load_policy) (true (allow ARG1 securityfs.fs (security (setenforce))))))

	(macro set_params ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (setsecparam)))
		(auditallow ARG1 securityfs.fs (security (setsecparam)))
		(typeattributeset setsecparam_subj_type_attribute ARG1))

	(macro validate_context ((type ARG1))
		(call fs.search_sysfs (ARG1))
		(call rw_files_pattern (ARG1 securityfs.fs securityfs.fs))
		(allow ARG1 securityfs.fs (security (check_context))))

	(macro set_load_policy_boolean ((type ARG1))
		(call set_spec_boolean (ARG1 sec_load_policy.bool))
		(optional sec_set_load_policy_boolean_optional_seutil
			(call setsebool.exec (ARG1))))

	(macro unconfined_subj_type ((type ARG1))
		(typeattributeset unconfined_subj_type_attribute ARG1)))
