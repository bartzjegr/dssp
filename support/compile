#!/bin/bash

declare PATHTOCONTEXTSRELATIVETODSSP="contexts/files/file_contexts"
declare PATHTOFUNCTIONSRELATIVETODSSP="support/functions"
declare PATHTOHOMEDIRCONTEXTSRELATIVETODSSP="contexts/files/file_contexts.homedirs"
declare PATHTOPRINTDEFAULTHOMEDIRTEMPLATERELATIVETODSSP="support/printdefaulthomedirtemplate"
declare PATHTOPRINTEXCLUDESRELATIVETODSSP="support/printexcludes"
declare PATHTOPRINTHOMEDIRTEMPLATERELATIVETODSSP="support/printhomedirtemplate"
declare PATHTOPRINTMODULESRELATIVETODSSP="support/printmodules"
declare PATHTOPRINTREALUSERSRELATIVETODSSP="support/printrealusers"
declare PATHTOPRINTSEUSERTUPLERELATIVETODSSP="support/printseusertuple"
declare PATHTOPRINTSPOOLFILETEMPLATERELATIVETODSSP="support/printspoolfiletemplate"
declare PATHTOSECILC="/usr/bin/secilc"
declare PATHTOSEUSERSLOCALRELATIVETODSSP="seusers.local"
declare PATHTOSEUSERSMCSRELATIVETODSSP="seusers.mcs"
declare PATHTOSEUSERSMLSRELATIVETODSSP="seusers.mls"
declare PATHTOSEUSERSSTANDARDRELATIVETODSSP="seusers.standard"

usage () {
	echo "$0 - compile DSSP

mandatory options

-m	: model to build
-p	: path to dssp sources

discretionary options

-d	: disable dontaudit
-i	: path to secilc
-n	: policy version
-r	: disable RBACSEP
-u	: unknown handling
-v	: verbose mode

exit codes

TODO	: TODO"
	exit
}

! (( $# > 0 )) && usage || :

while (( $# > 0 ))
do
	case $1 in
		\-m)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -m expects one parameter: model to build"
			exit
		fi

		MODELTOBUILD=$1

		if ! [[ $MODELTOBUILD == standard ]] && ! [[ $MODELTOBUILD == mcs ]] && ! [[ $MODELTOBUILD == mls ]]
		then
			printf "%s\n" "invalid model $MODELTOBUILD specified, must be one of: standard, mcs, or mls"
			exit 1
		fi
		;;
		\-p)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -p expects one parameter: path to dssp source"
			exit
		fi

		PATHTODSSP=$1
		;;
		\-u)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -u expects one parameter: unknown handling"
			exit
		fi

		UNKNOWNHANDLING=$1

		if ! [[ $UNKNOWNHANDLING == allow ]] || ! [[ $UNKNOWNHANDLING == deny ]] || ! [[ $UNKNOWNHANDLING == reject ]]
		then
			printf "%s\n" "invalid unknown handling $UNKNOWNHANDLING specified, must be one of: allow, deny, or reject"
			exit 1
		fi
		;;
		\-d)

		DISABLEDONTAUDIT=1
		;;
		\-i)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -i expects one parameter: path to secilc"
			exit
		fi

		PATHTOSECILC=$1

		if ! [[ -x $PATHTOSECIL ]]
		then
			printf "%s\n" "invalid path to secilc"
			exit 1
		fi
		;;
		\-n)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -n expects one parameter: policy version"
			exit
		fi

		POLICYVERSION=$1

		if ! [[ -r /sys/fs/selinux/policyvers ]]
		then
			printf "%s\n" "unable to determine max policy version"
			exit 1

		elif (( $POLICYVERION > "`/bin/cat /sys/fs/selinux/policyvers 2>/dev/null`" ))
		then
			printf "%s\n" "invalid policy version $POLICYVERSION specified"
			exit 1

		else
			printf "%s\n" "unhandled exception"
			exit 1
		fi
		;;
		\-r)

		DISABLERBACSEP=1
		;;
		\-v)
		DEBUG=1
		;;
		*) break
		;;
		esac
	shift
done

if ! [[ -d $PATHTODSSP ]] || [[ -z $PATHTODSSP ]] || [[ -z $MODELTOBUILD ]] || ! [[ -x $PATHTOSECILC ]]
then
	usage
fi

if [[ -z $POLICYVERSION ]]
then
	if [[ -r /sys/fs/selinux/policyvers ]]
	then
		POLICYVERSION="`/bin/cat /sys/fs/selinux/policyvers 2>/dev/null`"

		if [[ -z $POLICYVERSION ]] && [[ ! $POLICYVERSION =~ "^[0-9]+$" ]]
		then
			printf "%s\n" "invalid policy version $POLICYVERSION specified"
			exit 1
		fi

	else
		echo "unable to determine max policy version"
		exit 1
	fi
fi

if ! [[ -r ${PATHTODSSP}/${PATHTOFUNCTIONSRELATIVETODSSP} ]]
then
	debug "unable to source functions"
	exit 1
fi

source ${PATHTODSSP}/${PATHTOFUNCTIONSRELATIVETODSSP} 2>/dev/null

debug "fetching path entries to exclude from policy"

EXCLUDES+=(`/bin/bash ${PATHTODSSP}/${PATHTOPRINTEXCLUDESRELATIVETODSSP} -p $PATHTODSSP`)

retval=`echo $?`

if ! [[ $retval == 0 ]] && ! [[ $retval == 201 ]]
then
	case $retval in
		194) debug "file is not readable" ;;
		195) debug "file is a zero-byte file" ;;
		196) debug "file is not a directory" ;;
		202) debug "no such file or directory" ;;
		*) debug "unhandled exception" ;;
	esac

	exit `echo $retval`
fi

if [[ -z $EXCLUDES ]]
then
	if [[ $retval == 201 ]]
	then
		debug "no path entries to be excluded"

	else
		debug "unhandled exception"
		exit 1
	fi

elif [[ -n $EXCLUDES ]]
then
	debug "path entries to be excluded"
fi

debug "fetching path entries to include with policy"

MODULES+=(`/bin/bash ${PATHTODSSP}/${PATHTOPRINTMODULESRELATIVETODSSP} -p $PATHTODSSP`)

retval=`echo $?`

if ! [[ $retval == 0 ]] && ! [[ $retval == 203 ]]
then
	case $retval in
		194) debug "file is not readable" ;;
		195) debug "file is a zero-byte file" ;;
		*) debug "unhandled exception" ;;
	esac

	exit `echo $retval`
fi

if [[ -z $MODULES ]]
then
	if [[ $retval == 203 ]]
	then
		debug "no path entries to be included"
		exit `echo $retval`

	else
		debug "unhandled exception"
		exit 1
	fi

elif [[ -n $MODULES ]]
then
	debug "path entries to be included"
fi

if [[ -n $EXCLUDES ]]
then
	for EXCLUDE in ${EXCLUDES[@]}
	do
		MODULESTOCOMPILE="`printf "%s\n" "${MODULES[@]}" | /bin/grep -v "$EXCLUDE" 2>/dev/null`"
	done

elif [[ -z $EXCLUDES ]]
then
	MODULESTOCOMPILE+="`printf "%s\n" "${MODULES[@]}" 2>/dev/null`"

	debug "nothing to exclude"

else
	debug "unhandled exception"
	exit 1
fi

( /bin/cd $PATHTODSSP && $PATHTOSECILC --policyvers="$POLICYVERSION" $([[ -n $DEBUG ]] && printf "%s" "-v") $([[ -n $DISABLEDONTAUDIT ]] && printf "%s" "-D") $([[ -n $UNKNOWNHANDLING ]] && printf "%s" --handle-unknown="$UNKNOWNHANDLING") ${MODULESTOCOMPILE[@]} -o ${PATHTODSSP}/policy/policy.${POLICYVERSION} -f ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} )

retval=`echo $?`

if ! [[ $retval == 0 ]]
then
        debug "built failed with status $retval"
        exit `echo $retval`
else
	debug "built ${PATHTODSSP}/policy/policy.${POLICYVERSION}"
fi

DEFAULTHOMEDIRTEMPLATE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTDEFAULTHOMEDIRTEMPLATERELATIVETODSSP} -p ${PATHTODSSP}`"

/bin/sed -i.bak '/^DEFAULT_HOME_DIR/d' ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} 2>/dev/null

IFS=$'\n'

echo > ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} ]]
then
	DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSLOCALRELATIVETODSSP} -p ${PATHTODSSP}`"
	DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
	DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

	for DEFAULTHOMEDIR in ${DEFAULTHOMEDIRTEMPLATE[*]}
	do
		if [[ -z $DISABLERBACSEP ]]
		then
			NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
			ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
			echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

		elif [[ $DISABLERBACSEP == 1 ]]
		then
			NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
			echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

		else
			printf "%s\n" "unhandled exception"
			exit 1
		fi
	done

elif [[ $MODELTOBUILD == standard ]]
then
	if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} ]]
	then
		DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSSTANDARDRELATIVETODSSP} -p ${PATHTODSSP}`"
		DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
		DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

		for DEFAULTHOMEDIR in ${DEFAULTHOMEDIRTEMPLATE[*]}
		do
			if [[ -z $DISABLERBACSEP ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
				echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

			elif [[ $DISABLERBACSEP == 1 ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

			else
				printf "%s\n" "unhandled exception"
				exit 1
			fi
		done

	else
		printf "%s\n" "unhandled exception"
		exit 1
	fi

elif [[ $MODELTOBUILD == mcs ]]
then
	if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} ]]
	then
		DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMCSRELATIVETODSSP} -p ${PATHTODSSP}`"
		DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
		DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

		for DEFAULTHOMEDIR in ${DEFAULTHOMEDIRTEMPLATE[*]}
		do
			if [[ -z $DISABLERBACSEP ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
				echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

			elif [[ $DISABLERBACSEP == 1 ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

			else
				printf "%s\n" "unhandled exception"
				exit 1
			fi
		done

	else
		printf "%s\n" "unhandled exception"
		exit 1
	fi

elif [[ $MODELTOBUILD == mls ]]
then
	if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} ]]
	then
		DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMLSRELATIVETODSSP} -p ${PATHTODSSP}`"
		DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
		DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

		for DEFAULTHOMEDIR in ${DEFAULTHOMEDIRTEMPLATE[*]}
		do
			if [[ -z $DISABLERBACSEP ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
				echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

			elif [[ $DISABLERBACSEP == 1 ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

			else
				printf "%s\n" "unhandled exception"
				exit 1
			fi
		done

	else
		printf "%s\n" "unhandled exception"
		exit 1
	fi
fi

USERNAMES="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTREALUSERSRELATIVETODSSP} -p ${PATHTODSSP}`"
HOMEDIRTEMPLATE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTHOMEDIRTEMPLATERELATIVETODSSP} -p ${PATHTODSSP}`"
SPOOLFILETEMPLATE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSPOOLFILETEMPLATERELATIVETODSSP} -p ${PATHTODSSP}`"

/bin/sed -i.bak '/^HOME_DIR/d' ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} 2>/dev/null
/bin/sed -i.bak '/^USER_SPOOL/d' ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} 2>/dev/null

for USERNAME in ${USERNAMES[*]}
do
	if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} ]]
	then
		if [[ `/bin/grep "^$USERNAME:" ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP}` ]]
		then
			SEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSLOCALRELATIVETODSSP} -p ${PATHTODSSP} -u ${USERNAME}`"
			SEUSERID="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
			SEUSERROLE="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

			for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
			do
				if [[ -z $DISABLERBACSEP ]]
				then
					NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
					ID=`echo "${NAME//sys.id/$SEUSERID}"`
					echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

				elif [[ $DISABLERBACSEP == 1 ]]
				then
					NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
					echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

				else
					printf "%s\n" "unhandled exception"
					exit 1
				fi
			done

			for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
			do
				if [[ -z $DISABLERBACSEP ]]
				then
					NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
					ID=`echo "${NAME//sys.id/$SEUSERID}"`
					echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

				elif [[ $DISABLERBACSEP == 1 ]]
				then
					NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
					echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

				else
					printf "%s\n" "unhandled exception"
					exit 1
				fi
			done

		else
			DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSLOCALRELATIVETODSSP} -p ${PATHTODSSP}`"
			DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
			DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

			for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
			do
				if [[ -z $DISABLERBACSEP ]]
				then
					NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
					ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
					echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

				elif [[ $DISABLERBACSEP == 1 ]]
				then
					NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
					echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

				else
					printf "%s\n" "unhandled exception"
					exit 1
				fi
			done

			for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
			do
				if [[ -z $DISABLERBACSEP ]]
				then
					NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
					ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
					echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

				elif [[ $DISABLERBACSEP == 1 ]]
				then
					NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
					echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

				else
					printf "%s\n" "unhandled exception"
					exit 1
				fi
			done
		fi

	elif [[ $MODELTOBUILD == standard ]]
	then
		if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} ]]
		then
			if [[ `/bin/grep "^$USERNAME:" ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP}` ]]
			then
				SEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSSTANDARDRELATIVETODSSP} -p ${PATHTODSSP} -u ${USERNAME}`"
				SEUSERID="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
				SEUSERROLE="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

			else
				DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSSTANDARDRELATIVETODSSP} -p ${PATHTODSSP}`"
				DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
				DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done
			fi

		else
			printf "%s\n" "unhandled exception"
			exit 1
		fi

	elif [[ $MODELTOBUILD == mcs ]]
	then
		if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} ]]
		then
			if [[ `/bin/grep "^$USERNAME:" ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP}` ]]
			then
				SEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMCSRELATIVETODSSP} -p ${PATHTODSSP} -u ${USERNAME}`"
				SEUSERID="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
				SEUSERROLE="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

			else
				DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMCSRELATIVETODSSP} -p ${PATHTODSSP}`"
				DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
				DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done
			fi

		else
			printf "%s\n" "unhandled exception"
			exit 1
		fi

	elif [[ $MODELTOBUILD == mls ]]
	then
		if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} ]]
		then
			if [[ `/bin/grep "^$USERNAME:" ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP}` ]]
			then
				SEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMLSRELATIVETODSSP} -p ${PATHTODSSP} -u ${USERNAME}`"
				SEUSERID="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
				SEUSERROLE="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

			else
				DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMLSRELATIVETODSSP} -p ${PATHTODSSP}`"
				DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"
				DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

					else
						printf "%s\n" "unhandled exception"
						exit 1
					fi
				done
			fi

		else
			printf "%s\n" "unhandled exception"
			exit 1
		fi

	else
		printf "%s\n" "unhandled exception"
		exit 1
	fi
done

if [[ -x /sbin/sefcontext_compile ]]
then
	/sbin/sefcontext_compile ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} && /sbin/sefcontext_compile ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}
fi

exit
#EOF
