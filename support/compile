#!/bin/bash

# todo: implement a "make clean" option to remove generated contexts and policy

declare PATHTOCONTEXTSRELATIVETODSSP="contexts/files/file_contexts"
declare PATHTOFUNCTIONSRELATIVETODSSP="support/functions"
declare PATHTOHOMEDIRCONTEXTSRELATIVETODSSP="contexts/files/file_contexts.homedirs"
declare PATHTOPRINTDEFAULTHOMEDIRTEMPLATERELATIVETODSSP="support/printdefaulthomedirtemplate"
declare PATHTOPRINTEXCLUDESRELATIVETODSSP="support/printexcludes"
declare PATHTOPRINTHOMEDIRTEMPLATERELATIVETODSSP="support/printhomedirtemplate"
declare PATHTOPRINTMODULESRELATIVETODSSP="support/printmodules"
declare PATHTOPRINTREALUSERSRELATIVETODSSP="support/printrealusers"
declare PATHTOPRINTSEUSERTUPLERELATIVETODSSP="support/printseusertuple"
declare PATHTOPRINTSPOOLFILETEMPLATERELATIVETODSSP="support/printspoolfiletemplate"
declare PATHTOSECILC="/usr/bin/secilc"
declare PATHTOSEUSERSLOCALRELATIVETODSSP="seusers.local"
declare PATHTOSEUSERSMCSRELATIVETODSSP="seusers.mcs"
declare PATHTOSEUSERSMLSRELATIVETODSSP="seusers.mls"
declare PATHTOSEUSERSSTANDARDRELATIVETODSSP="seusers.standard"

usage () {
	echo "$0 - compile DSSP

mandatory options

-m	: model to build
-p	: path to dssp sources

discretionary options

-d	: disable dontaudit
-i	: path to secilc
-n	: policy version
-r	: disable RBACSEP
-u	: unknown handling
-v	: verbose mode

exit codes

193	: file is not accessible
194	: file is not readable
195	: file is a zero-byte file
196	: file is not a directory
197 	: file is not a writeable file
202	: no such file or directory
203	: no path entries to be included"
	exit
}

! (( $# > 0 )) && usage || :

while (( $# > 0 ))
do
	case $1 in
		\-m)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -m expects one parameter: model to build"
			exit
		fi

		MODELTOBUILD=$1

		if ! [[ $MODELTOBUILD == standard ]] && ! [[ $MODELTOBUILD == mcs ]] && ! [[ $MODELTOBUILD == mls ]]
		then
			printf "%s\n" "invalid model \"$MODELTOBUILD\"specified, must be one of: standard, mcs, or mls"
			exit 1
		fi
		;;
		\-p)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -p expects one parameter: path to dssp source"
			exit
		fi

		PATHTODSSP=$1
		;;
		\-u)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -u expects one parameter: unknown handling"
			exit
		fi

		UNKNOWNHANDLING=$1

		if ! [[ $UNKNOWNHANDLING == allow ]] || ! [[ $UNKNOWNHANDLING == deny ]] || ! [[ $UNKNOWNHANDLING == reject ]]
		then
			printf "%s\n" "invalid unknown handling \"$UNKNOWNHANDLING\" specified, must be one of: allow, deny, or reject"
			exit 1
		fi
		;;
		\-d)

		DISABLEDONTAUDIT=1
		;;
		\-i)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -i expects one parameter: path to secilc"
			exit
		fi

		PATHTOSECILC=$1

		if ! [[ -x $PATHTOSECIL ]]
		then
			printf "%s\n" "invalid path to secilc"
			exit 1
		fi
		;;
		\-n)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -n expects one parameter: policy version"
			exit
		fi

		POLICYVERSION=$1

		if ! [[ -r /sys/fs/selinux/policyvers ]]
		then
			printf "%s\n" "unable to determine max policy version"
			exit 1

		elif (( $POLICYVERSION > "`/bin/cat /sys/fs/selinux/policyvers 2>/dev/null`" ))
		then
			printf "%s\n" "invalid policy version \"$POLICYVERSION\" specified"
			exit 1
		fi
		;;
		\-r)

		DISABLERBACSEP=1
		;;
		\-v)

		DEBUG=1
		;;
		*)

		break
		;;
		esac
	shift
done

if ! [[ -d $PATHTODSSP ]] || [[ -z $PATHTODSSP ]] || [[ -z $MODELTOBUILD ]] || ! [[ -x $PATHTOSECILC ]]
then
	usage
fi

if [[ -z $POLICYVERSION ]]
then
	if [[ -r /sys/fs/selinux/policyvers ]]
	then
		POLICYVERSION="`/bin/cat /sys/fs/selinux/policyvers 2>/dev/null`"

		if [[ -z $POLICYVERSION ]] && [[ ! $POLICYVERSION =~ "^[0-9]+$" ]]
		then
			debug "invalid policy version \"$POLICYVERSION\" specified"
			exit 1
		fi

	else
		debug "unable to determine max policy version"
		exit 1
	fi
fi

if ! [[ -r ${PATHTODSSP}/${PATHTOFUNCTIONSRELATIVETODSSP} ]]
then
	debug "unable to source functions"
	exit 1
fi

source ${PATHTODSSP}/${PATHTOFUNCTIONSRELATIVETODSSP} 2>/dev/null

if ! [[ -w $PATHTODSSP ]]
then
	debug "path to dssp \"$PATHTODSSP\" is not writeable"
	exit 1
fi

debug "fetching path entries to exclude from policy"

EXCLUDES+=(`/bin/bash ${PATHTODSSP}/${PATHTOPRINTEXCLUDESRELATIVETODSSP} -p $PATHTODSSP`)

retval=`echo $?`

case $retval in
	1) debug "general fault" ;;
	193) debug "file is not accessible" ;;
	194) debug "file not readable" ;;
	195) debug "file is a zero byte file" ;;
	196) debug "file is not a directory" ;;
	201) debug "no path entries to list" ;;
	202) debug "no such file or directory" ;;
	*) debug "unhandled exception" ;;
esac

if ! [[ $retval == 0 ]] && ! [[ $retval == 201 ]]
then
	exit `echo $retval`
fi

if [[ -n $EXCLUDES ]]
then
	debug "path entries to be excluded"
fi

debug "fetching path entries to include with policy"

MODULES+=(`/bin/bash ${PATHTODSSP}/${PATHTOPRINTMODULESRELATIVETODSSP} -p $PATHTODSSP`)

retval=`echo $?`

case $retval in
	1) debug "general fault" ;;
	194) debug "file not readable" ;;
	195) debug "file is a zero byte file" ;;
	203) debug "no modules list" ;;
	*) debug "unhandled exception" ;;
esac

if ! [[ $retval == 0 ]] && ! [[ $retval == 203 ]]
then
	exit `echo $retval`
fi

if [[ -n $MODULES ]]
then
	debug "path entries to be included"
fi

if [[ -n $EXCLUDES ]]
then
	for EXCLUDE in ${EXCLUDES[@]}
	do
		MODULESTOCOMPILE="`printf "%s\n" "${MODULES[@]}" | /bin/grep -v "$EXCLUDE" 2>/dev/null`"
	done

elif [[ -z $EXCLUDES ]]
then
	MODULESTOCOMPILE+="`printf "%s\n" "${MODULES[@]}" 2>/dev/null`"

	debug "no path entries to be excluded"
fi

if [[ -n $MODULESTOCOMPILE ]]
then
	debug "modules to compile" "${MODULESTOCOMPILE[@]}"

elif [[ -z $MODULESTOCOMPILE ]]
then
	debug "no modules to compile"
	exit 1
fi

( /bin/cd $PATHTODSSP && $PATHTOSECILC --policyvers="$POLICYVERSION" $([[ -n $DEBUG ]] && printf "%s" "-v") $([[ -n $DISABLEDONTAUDIT ]] && printf "%s" "-D") $([[ -n $UNKNOWNHANDLING ]] && printf "%s" --handle-unknown="$UNKNOWNHANDLING") ${MODULESTOCOMPILE[@]} -o ${PATHTODSSP}/policy/policy.${POLICYVERSION} -f ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} )

retval=`echo $?`

if ! [[ $retval == 0 ]]
then
        debug "built failed with status $retval"
        exit `echo $retval`

else
	debug "built ${PATHTODSSP}/policy/policy.${POLICYVERSION}"
fi

DEFAULTHOMEDIRTEMPLATE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTDEFAULTHOMEDIRTEMPLATERELATIVETODSSP} -p ${PATHTODSSP}`"

retval=` echo $?`

if ! [[ $retval == 0 ]]
then
	case $retval in
		1) debug "general fault" ;;
		193) debug "file is not accessible" ;;
		194) debug "file not readable" ;;
		195) debug "file is a zero byte file" ;;
		198) debug "no default template to list" ;;
		*) debug "unhandled exception" ;;
	esac
fi

if ! [[ $retval == 0 ]] && ! [[ $retval == 198 ]]
then
	exit `echo $retval`
fi

if [[ -n $DEFAULTHOMEDIRTEMPLATE ]]
then
	/bin/sed -i.bak '/^DEFAULT_HOME_DIR/d' ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} 2>/dev/null

	if ! [[ $? == 0 ]]
	then
		debug "failed to remove default home dir template entries from ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP}"
	fi
fi

IFS=$'\n'

/bin/rm -f ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

if ! [[ $? == 0 ]]
then
	debug "failed to remove \"${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}\""
fi

/bin/rm -f ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}.bin 2>/dev/null

if ! [[ $? == 0 ]]
then
	debug "failed to remove \"${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}.bin\""
fi

/bin/touch ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

if ! [[ $? == 0 ]]
then
	debug "failed to touch empty file \"${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}\""
fi

if [[ -s ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} ]]
then
	debug "unable to zero ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}"
	exit 1
fi

if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} ]]
then
	DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSLOCALRELATIVETODSSP} -p ${PATHTODSSP}`"

	retval=`echo $?`

	if ! [[ $retval == 0 ]]
	then
		case $retval in
			1) debug "general fault" ;;
			193) debug "file is not accessible" ;;
			194) debug "file not readable" ;;
			195) debug "file is a zero byte file" ;;
			205) debug "no seuser tuple to list" ;;
			*) debug "unhandled exception" ;;
		esac
	fi

	if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
	then
		exit `echo $retval`
	fi

	DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

	if [[ -z $DEFAULTSEUSERID ]]
	then
		debug "unable to determine default selinux user identity"
	fi

	DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

	if [[ -z $DEFAULTSEUSERROLE ]]
	then
		debug "unable to determine default selinux user role"
	fi

	for DEFAULTHOMEDIR in ${DEFAULTHOMEDIRTEMPLATE[*]}
	do
		if [[ -z $DISABLERBACSEP ]]
		then
			NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
			ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
			echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

			if ! [[ $? == 0 ]]
			then
				debug "failed to append default home dir file context spec"
				exit 1
			fi

		elif [[ $DISABLERBACSEP == 1 ]]
		then
			NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
			echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

			if ! [[ $? == 0 ]]
			then
				debug "failed to append default home dir file context spec"
				exit 1
			fi
		fi
	done

elif [[ $MODELTOBUILD == standard ]]
then
	if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} ]]
	then
		DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSSTANDARDRELATIVETODSSP} -p ${PATHTODSSP}`"

		retval=`echo $?`

		if ! [[ $retval == 0 ]]
		then
			case $retval in
				1) debug "general fault" ;;
				193) debug "file is not accessible" ;;
				194) debug "file not readable" ;;
				195) debug "file is a zero byte file" ;;
				205) debug "no seuser tuple to list" ;;
				*) debug "unhandled exception" ;;
			esac
		fi

		if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
		then
			exit `echo $retval`
		fi

		DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

		if [[ -z $DEFAULTSEUSERID ]]
		then
			debug "unable to determine default selinux user identity"
		fi

		DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

		if [[ -z $DEFAULTSEUSERROLE ]]
		then
			debug "unable to determine default selinux user role"
		fi

		for DEFAULTHOMEDIR in ${DEFAULTHOMEDIRTEMPLATE[*]}
		do
			if [[ -z $DISABLERBACSEP ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
				echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

				if ! [[ $? == 0 ]]
				then
					debug "failed to append default home dir file context spec"
					exit 1
				fi

			elif [[ $DISABLERBACSEP == 1 ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

				if ! [[ $? == 0 ]]
				then
					debug "failed to append default home dir file context spec"
					exit 1
				fi
			fi
		done
	fi

elif [[ $MODELTOBUILD == mcs ]]
then
	if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} ]]
	then
		DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMCSRELATIVETODSSP} -p ${PATHTODSSP}`"

		retval=`echo $?`

		if ! [[ $retval == 0 ]]
		then
			case $retval in
				1) debug "general fault" ;;
				193) debug "file is not accessible" ;;
				194) debug "file not readable" ;;
				195) debug "file is a zero byte file" ;;
				205) debug "no seuser tuple to list" ;;
				*) debug "unhandled exception" ;;
			esac
		fi

		if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
		then
			exit `echo $retval`
		fi

		DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

		if [[ -z $DEFAULTSEUSERID ]]
		then
			debug "unable to determine default selinux user identity"
		fi

		DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

		if [[ -z $DEFAULTSEUSERROLE ]]
		then
			debug "unable to determine default selinux user role"
		fi

		for DEFAULTHOMEDIR in ${DEFAULTHOMEDIRTEMPLATE[*]}
		do
			if [[ -z $DISABLERBACSEP ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
				echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

				if ! [[ $? == 0 ]]
				then
					debug "failed to append default home dir file context spec"
					exit 1
				fi

			elif [[ $DISABLERBACSEP == 1 ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

				if ! [[ $? == 0 ]]
				then
					debug "failed to append default home dir file context spec"
					exit 1
				fi
			fi
		done
	fi

elif [[ $MODELTOBUILD == mls ]]
then
	if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} ]]
	then
		DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMLSRELATIVETODSSP} -p ${PATHTODSSP}`"

		retval=`echo $?`

		if ! [[ $retval == 0 ]]
		then
			case $retval in
				1) debug "general fault" ;;
				193) debug "file is not accessible" ;;
				194) debug "file not readable" ;;
				195) debug "file is a zero byte file" ;;
				205) debug "no seuser tuple to list" ;;
				*) debug "unhandled exception" ;;
			esac
		fi

		if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
		then
			exit `echo $retval`
		fi

		DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

		if [[ -z $DEFAULTSEUSERID ]]
		then
			debug "unable to determine default selinux user identity"
		fi

		DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

		if [[ -z $DEFAULTSEUSERROLE ]]
		then
			debug "unable to determine default selinux user role"
		fi

		for DEFAULTHOMEDIR in ${DEFAULTHOMEDIRTEMPLATE[*]}
		do
			if [[ -z $DISABLERBACSEP ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
				echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

				if ! [[ $? == 0 ]]
				then
					debug "failed to append default home dir file context spec"
					exit 1
				fi

			elif [[ $DISABLERBACSEP == 1 ]]
			then
				NAME=`echo "${DEFAULTHOMEDIR//DEFAULT_HOME_DIR//home}"`
				echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

				if ! [[ $? == 0 ]]
				then
					debug "failed to append default home dir file context spec"
					exit 1
				fi
			fi
		done
	fi
fi

USERNAMES="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTREALUSERSRELATIVETODSSP} -p ${PATHTODSSP}`"

retval=` echo $?`

if ! [[ $retval == 0 ]]
then
	case $retval in
		1) debug "general fault" ;;
		193) debug "file is not accessible" ;;
		194) debug "file not readable" ;;
		195) debug "file is a zero byte file" ;;
		204) debug "no real users to list" ;;
		*) debug "unhandled exception" ;;
	esac
fi

if ! [[ $retval == 0 ]] && ! [[ $retval == 204 ]]
then
	exit `echo $retval`
fi

HOMEDIRTEMPLATE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTHOMEDIRTEMPLATERELATIVETODSSP} -p ${PATHTODSSP}`"

retval=`echo $?`

if ! [[ $retval == 0 ]]
then
	case $retval in
		1) debug "general fault" ;;
		193) debug "file is not accessible" ;;
		194) debug "file not readable" ;;
		195) debug "file is a zero byte file" ;;
		198) debug "no template to list" ;;
		*) debug "unhandled exception" ;;
	esac
fi

if ! [[ $retval == 0 ]] && ! [[ $retval == 198 ]]
then
	exit `echo $retval`
fi

if [[ -n $HOMEDIRTEMPLATE ]]
then
	/bin/sed -i.bak '/^HOME_DIR/d' ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} 2>/dev/null

	if ! [[ $? == 0 ]]
	then
		debug "unable to remove home dir template entries from ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP}"
	fi
fi

SPOOLFILETEMPLATE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSPOOLFILETEMPLATERELATIVETODSSP} -p ${PATHTODSSP}`"

retval=`echo $?`

if ! [[ $retval == 0 ]]
then
	case $retval in
		1) debug "general fault" ;;
		193) debug "file is not accessible" ;;
		194) debug "file not readable" ;;
		195) debug "file is a zero byte file" ;;
		204) debug "no template to list" ;;
		*) debug "unhandled exception" ;;
	esac
fi

if ! [[ $retval == 0 ]] && ! [[ $retval == 198 ]]
then
	exit `echo $retval`
fi

if [[ -n $SPOOLFILETEMPLATE ]]
then
	/bin/sed -i.bak '/^USER_SPOOL/d' ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} 2>/dev/null

	if ! [[ $? == 0 ]]
	then
		debug "unable to remove spool file template entries from ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP}"
	fi
fi

for USERNAME in ${USERNAMES[*]}
do
	if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} ]]
	then
		if [[ `/bin/grep "^$USERNAME:" ${PATHTODSSP}/${PATHTOSEUSERSLOCALRELATIVETODSSP} 2>/dev/null` ]]
		then
			SEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSLOCALRELATIVETODSSP} -p ${PATHTODSSP} -u ${USERNAME}`"

			retval=`echo $?`

			if ! [[ $retval == 0 ]]
			then
				case $retval in
					1) debug "general fault" ;;
					193) debug "file is not accessible" ;;
					194) debug "file not readable" ;;
					195) debug "file is a zero byte file" ;;
					205) debug "no seuser tuple to list" ;;
					*) debug "unhandled exception" ;;
				esac
			fi

			if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
			then
				exit `echo $retval`
			fi

			SEUSERID="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

			if [[ -z $SEUSERID ]]
			then
				debug "unable to determine selinux user identity"
			fi

			SEUSERROLE="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

			if [[ -z $SEUSERROLE ]]
			then
				debug "unable to determine selinux user role"
			fi

			for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
			do
				if [[ -z $DISABLERBACSEP ]]
				then
					NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
					ID=`echo "${NAME//sys.id/$SEUSERID}"`
					echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

					if ! [[ $? == 0 ]]
					then
						debug "failed to append home dir file context spec"
						exit 1
					fi

				elif [[ $DISABLERBACSEP == 1 ]]
				then
					NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
					echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

					if ! [[ $? == 0 ]]
					then
						debug "failed to append home dir file context spec"
						exit 1
					fi
				fi
			done

			for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
			do
				if [[ -z $DISABLERBACSEP ]]
				then
					NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
					ID=`echo "${NAME//sys.id/$SEUSERID}"`
					echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

					if ! [[ $? == 0 ]]
					then
						debug "failed to append spool file context spec"
						exit 1
					fi

				elif [[ $DISABLERBACSEP == 1 ]]
				then
					NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
					echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

					if ! [[ $? == 0 ]]
					then
						debug "failed to append spool file context spec"
						exit 1
					fi
				fi
			done

		else
			DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSLOCALRELATIVETODSSP} -p ${PATHTODSSP}`"

			retval=`echo $?`

			if ! [[ $retval == 0 ]]
			then
				case $retval in
					1) debug "general fault" ;;
					193) debug "file is not accessible" ;;
					194) debug "file not readable" ;;
					195) debug "file is a zero byte file" ;;
					205) debug "no seuser tuple to list" ;;
					*) debug "unhandled exception" ;;
				esac
			fi

			if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
			then
				exit `echo $retval`
			fi

			DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

			if [[ -z $DEFAULTSEUSERID ]]
			then
				debug "unable to determine default selinux user identity"
			fi

			DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

			if [[ -z $DEFAULTSEUSERROLE ]]
			then
				debug "unable to determine default selinux user role"
			fi

			for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
			do
				if [[ -z $DISABLERBACSEP ]]
				then
					NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
					ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
					echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

					if ! [[ $? == 0 ]]
					then
						debug "failed to append home dir file context spec"
						exit 1
					fi

				elif [[ $DISABLERBACSEP == 1 ]]
				then
					NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
					echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

					if ! [[ $? == 0 ]]
					then
						debug "failed to append home dir file context spec"
						exit 1
					fi
				fi
			done

			for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
			do
				if [[ -z $DISABLERBACSEP ]]
				then
					NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
					ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
					echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

					if ! [[ $? == 0 ]]
					then
						debug "failed to append spool file context spec"
						exit 1
					fi

				elif [[ $DISABLERBACSEP == 1 ]]
				then
					NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
					echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

					if ! [[ $? == 0 ]]
					then
						debug "failed to append spool file context spec"
						exit 1
					fi
				fi
			done
		fi

	elif [[ $MODELTOBUILD == standard ]]
	then
		if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} ]]
		then
			if [[ `/bin/grep "^$USERNAME:" ${PATHTODSSP}/${PATHTOSEUSERSSTANDARDRELATIVETODSSP} 2>/dev/null` ]]
			then
				SEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSSTANDARDRELATIVETODSSP} -p ${PATHTODSSP} -u ${USERNAME}`"

				retval=`echo $?`

				if ! [[ $retval == 0 ]]
				then
					case $retval in
						1) debug "general fault" ;;
						193) debug "file is not accessible" ;;
						194) debug "file not readable" ;;
						195) debug "file is a zero byte file" ;;
						205) debug "no seuser tuple to list" ;;
						*) debug "unhandled exception" ;;
					esac
				fi

				if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
				then
					exit `echo $retval`
				fi

				SEUSERID="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

				if [[ -z $SEUSERID ]]
				then
					debug "unable to determine selinux user identity"
				fi

				SEUSERROLE="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				if [[ -z $SEUSERROLE ]]
				then
					debug "unable to determine selinux user role"
				fi

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi
					fi
				done

			else
				DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSSTANDARDRELATIVETODSSP} -p ${PATHTODSSP}`"

				retval=`echo $?`

				if ! [[ $retval == 0 ]]
				then
					case $retval in
						1) debug "general fault" ;;
						193) debug "file is not accessible" ;;
						194) debug "file not readable" ;;
						195) debug "file is a zero byte file" ;;
						205) debug "no seuser tuple to list" ;;
						*) debug "unhandled exception" ;;
					esac
				fi

				if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
				then
					exit `echo $retval`
				fi

				DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

				if [[ -z $DEFAULTSEUSERID ]]
				then
					debug "unable to determine default selinux user identity"
				fi

				DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				if [[ -z $DEFAULTSEUSERROLE ]]
				then
					debug "unable to determine default selinux user role"
				fi

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi
					fi
				done
			fi
		fi

	elif [[ $MODELTOBUILD == mcs ]]
	then
		if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} ]]
		then
			if [[ `/bin/grep "^$USERNAME:" ${PATHTODSSP}/${PATHTOSEUSERSMCSRELATIVETODSSP} 2>/dev/null` ]]
			then
				SEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMCSRELATIVETODSSP} -p ${PATHTODSSP} -u ${USERNAME}`"

				retval=`echo $?`

				if ! [[ $retval == 0 ]]
				then
					case $retval in
						1) debug "general fault" ;;
						193) debug "file is not accessible" ;;
						194) debug "file not readable" ;;
						195) debug "file is a zero byte file" ;;
						205) debug "no seuser tuple to list" ;;
						*) debug "unhandled exception" ;;
					esac
				fi

				if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
				then
					exit `echo $retval`
				fi

				SEUSERID="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

				if [[ -z $SEUSERID ]]
				then
					debug "unable to determine selinux user identity"
				fi

				SEUSERROLE="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				if [[ -z $SEUSERROLE ]]
				then
					debug "unable to determine selinux user role"
				fi

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi
					fi
				done

			else
				DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMCSRELATIVETODSSP} -p ${PATHTODSSP}`"

				retval=`echo $?`

				if ! [[ $retval == 0 ]]
				then
					case $retval in
						1) debug "general fault" ;;
						193) debug "file is not accessible" ;;
						194) debug "file not readable" ;;
						195) debug "file is a zero byte file" ;;
						205) debug "no seuser tuple to list" ;;
						*) debug "unhandled exception" ;;
					esac
				fi

				if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
				then
					exit `echo $retval`
				fi

				DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

				if [[ -z $DEFAULTSEUSERID ]]
				then
					debug "unable to determine default selinux user identity"
				fi

				DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				if [[ -z $DEFAULTSEUSERROLE ]]
				then
					debug "unable to determine default selinux user role"
				fi

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi
					fi
				done
			fi
		fi

	elif [[ $MODELTOBUILD == mls ]]
	then
		if [[ -r ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} ]] || [[ -s ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} ]]
		then
			if [[ `/bin/grep "^$USERNAME:" ${PATHTODSSP}/${PATHTOSEUSERSMLSRELATIVETODSSP} 2>/dev/null` ]]
			then
				SEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMLSRELATIVETODSSP} -p ${PATHTODSSP} -u ${USERNAME}`"

				retval=`echo $?`

				if ! [[ $retval == 0 ]]
				then
					case $retval in
						1) debug "general fault" ;;
						193) debug "file is not accessible" ;;
						194) debug "file not readable" ;;
						195) debug "file is a zero byte file" ;;
						205) debug "no seuser tuple to list" ;;
						*) debug "unhandled exception" ;;
					esac
				fi

				if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
				then
					exit `echo $retval`
				fi

				SEUSERID="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

				if [[ -z $SEUSERID ]]
				then
					debug "unable to determine selinux user identity"
				fi

				SEUSERROLE="`printf "%s\n" "$SEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				if [[ -z $SEUSERROLE ]]
				then
					debug "unable to determine selinux user role"
				fi

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$SEUSERID}"`
						echo "${ID//sys.role/"$SEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$SEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi
					fi
				done

			else
				DEFAULTSEUSERROLETUPLE="`/bin/bash ${PATHTODSSP}/${PATHTOPRINTSEUSERTUPLERELATIVETODSSP} -s ${PATHTOSEUSERSMLSRELATIVETODSSP} -p ${PATHTODSSP}`"

				retval=`echo $?`

				if ! [[ $retval == 0 ]]
				then
					case $retval in
						1) debug "general fault" ;;
						193) debug "file is not accessible" ;;
						194) debug "file not readable" ;;
						195) debug "file is a zero byte file" ;;
						205) debug "no seuser tuple to list" ;;
						*) debug "unhandled exception" ;;
					esac
				fi

				if ! [[ $retval == 0 ]] && ! [[ $retval == 205 ]]
				then
					exit `echo $retval`
				fi

				DEFAULTSEUSERID="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $1 }' 2>/dev/null`"

				if [[ -z $DEFAULTSEUSERID ]]
				then
					debug "unable to determine default selinux user identity"
				fi

				DEFAULTSEUSERROLE="`printf "%s\n" "$DEFAULTSEUSERROLETUPLE" | /bin/awk -F":" '{ print $2 }' 2>/dev/null`"

				if [[ -z $DEFAULTSEUSERROLE ]]
				then
					debug "unable to determine default selinux user role"
				fi

				for HOMEDIR in ${HOMEDIRTEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${HOMEDIR//HOME_DIR//home/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append home dir file context spec"
							exit 1
						fi
					fi
				done

				for SPOOLFILE in ${SPOOLFILETEMPLATE[*]}
				do
					if [[ -z $DISABLERBACSEP ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						ID=`echo "${NAME//sys.id/$DEFAULTSEUSERID}"`
						echo "${ID//sys.role/"$DEFAULTSEUSERROLE"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi

					elif [[ $DISABLERBACSEP == 1 ]]
					then
						NAME=`echo "${SPOOLFILE//USER_SPOOL//var/spool/mail/"$USERNAME"}"`
						echo "${NAME//sys.id/"$DEFAULTSEUSERID"}" >> ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

						if ! [[ $? == 0 ]]
						then
							debug "failed to append spool file context spec"
							exit 1
						fi
					fi
				done
			fi
		fi
	fi
done

if [[ -x /sbin/sefcontext_compile ]]
then
	/sbin/sefcontext_compile ${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP} 2>/dev/null

	if ! [[ $? == 0 ]]
	then
		debug "failed to compile contexts for \"${PATHTODSSP}/${PATHTOCONTEXTSRELATIVETODSSP}\""
	fi

	filetestandresult -s ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}

	retval=`echo $?`

	if [[ $retval == 0 ]]
	then
		/sbin/sefcontext_compile ${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP} 2>/dev/null

	elif [[ $retval == 195 ]]
	then
		debug "not compiling empty \"${PATHTODSSP}/${PATHTOHOMEDIRCONTEXTSRELATIVETODSSP}\""
	fi
else
	debug "unable to execute /bin/sefcontext_conpile"
fi

exit `echo $?`
#EOF
