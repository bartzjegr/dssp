#!/bin/bash

declare PATHTOFUNCTIONSRELATIVETODSSP="support/functions"

usage () {
	echo "$0 - wraps around sha256sum to provide custom debug and exit code functionality

mandatory options

-p	: path to dssp sources
-s	: path to source
-t	: path to target

discretionary options

-d	: enable debugging

exit codes

0	: success
1	: general fault
193	: file is not accessible
194	: file is not readable
195	: file is a zero-byte file
199	: files are identical
200	: files are not identical"
	exit
}

! (( $# > 0 )) && usage || :

while (( $# > 0 ))
do
	case $1 in
		\-p)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -p expects one parameter: path to dssp source"

			exit
		fi

		PATHTODSSP=$1
		;;
		\-s)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -s expects one parameter: path to source"

			exit
		fi

		PATHTOSOURCE=$1
		;;
		\-t)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -t expects one parameter: path to target"

			exit
		fi

		PATHTOTARGET=$1
		;;
		\-d)

		DEBUG=1
		;;
		*)

		break
		;;
		esac
	shift
done

if ! [[ -d $PATHTODSSP ]] || [[ -z $PATHTODSSP ]] || [[ -z $PATHTOSOURCE ]] || [[ -z $PATHTOTARGET ]] || ! [[ -x /bin/sha256sum ]]
then
	usage
fi

if ! [[ -r ${PATHTODSSP}/${PATHTOFUNCTIONSRELATIVETODSSP} ]]
then
	printf "%s\n" "unable to source functions"

	exit 1
fi

source ${PATHTODSSP}/${PATHTOFUNCTIONSRELATIVETODSSP} 2>/dev/null

filetestandresult -f ${PATHTOSOURCE}

retval=`echo $?`

! [[ $retval == 0 ]] && exit `echo $retval`

filetestandresult -r ${PATHTOSOURCE}

retval=`echo $?`

! [[ $retval == 0 ]] && exit `echo $retval`

filetestandresult -s ${PATHTOSOURCE}

retval=`echo $?`

! [[ $retval == 0 ]] && exit `echo $retval`

filetestandresult -f ${PATHTOTARGET}

retval=`echo $?`

! [[ $retval == 0 ]] && exit `echo $retval`

filetestandresult -r ${PATHTOTARGET}

retval=`echo $?`

! [[ $retval == 0 ]] && exit `echo $retval`

filetestandresult -s ${PATHTOTARGET}

retval=`echo $?`

! [[ $retval == 0 ]] && exit `echo $retval`

if [[ $UID == 0 ]]
then
	SUMSOURCE="`/bin/sha256sum $PATHTOSOURCE | /bin/awk '{ print $1 }' 2>/dev/null`"

	retval=`echo $?`

	if ! [[ $retval == 0 ]]
	then
		printf "%s\n" "failed to get source sum"

		exit `echo $retval`
	fi

elif ! [[ $UID == 0 ]]
then
	SUMSOURCE="`/bin/sudo -E /bin/sha256sum $PATHTOSOURCE | /bin/awk '{ print $1 }' 2>/dev/null`"

	retval=`echo $?`

	if ! [[ $retval == 0 ]]
	then
		printf "%s\n" "failed to get source sum"

		exit `echo $retval`
	fi
fi

if [[ -z $SUMSOURCE ]]
then
	debug "failed to get source sum"

	exit 1
fi

if [[ $UID == 0 ]]
then
	SUMTARGET="`/bin/sha256sum $PATHTOTARGET | /bin/awk '{ print $1 }' 2>/dev/null`"

	retval=`echo $?`

	if ! [[ $retval == 0 ]]
	then
		printf "%s\n" "failed to get target sum"

		exit `echo $retval`
	fi

elif ! [[ $UID == 0 ]]
then
	SUMTARGET="`/bin/sudo -E /bin/sha256sum $PATHTOTARGET | /bin/awk '{ print $1 }' 2>/dev/null`"

	retval=`echo $?`

	if ! [[ $retval == 0 ]]
	then
		printf "%s\n" "failed to get target sum"

		exit `echo $retval`
	fi
fi

if [[ -z $SUMTARGET ]]
then
	debug "failed to get target sum"

	exit 1
fi

if [[ $SUMSOURCE == $SUMTARGET ]]
then
	exit 199

elif ! [[ $SUMSOURCE == $SUMTARGET ]]
then
	exit 200
fi

exit `echo $retval`
#EOF
