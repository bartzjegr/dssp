#!/bin/bash

declare PATHSTOMODULESRELATIVETODSSP=('sources' 'sources.d')
declare PATHTOFUNCTIONSRELATIVETODSSP="support/functions"

usage () {
	echo "$0 - prints a list of modules

mandatory options

-p	: path to dssp source

discretionary options

-d	: enable debugging
-e	: alternative paths to modules relative to dssp separated by comma

exit codes

0	: success
1	: general fault
194	: file is not readable
195	: file is a zero-byte file
203	: no modules to list"
	exit
}

! (( $# > 0 )) && usage || :

while (( $# > 0 ))
do
	case $1 in
		\-e)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -e expects one parameter: alternative paths to modules relative to dssp separated by comma"

			exit
		fi

		unset PATHSTOMODULESRELATIVETODSSP

		PATHSTOMODULESRELATIVETODSSP+="`/bin/echo $1 | /bin/sed "s/,/ /g"`"
		;;
		\-p)
		shift

		if ! (( $# > 0 ))
		then
			printf "%s\n" "option -p expects one parameter: path to dssp source"

			exit
		fi

		PATHTODSSP=$1
		;;
		\-d)

		DEBUG=1
		;;
		*)

		break
		;;
		esac
	shift
done

if [[ -z $PATHTODSSP ]] || ! [[ -d $PATHTODSSP ]] || ! [[ -x /bin/find ]]
then
	usage
fi

if ! [[ -r ${PATHTODSSP}/${PATHTOFUNCTIONSRELATIVETODSSP} ]]
then
	printf "%s\n" "unable to source functions"

	exit 1
fi

source ${PATHTODSSP}/${PATHTOFUNCTIONSRELATIVETODSSP} 2>/dev/null

for PATHTOMODULESRELATIVETODSSP in ${PATHSTOMODULESRELATIVETODSSP[@]}
do
	filetestandresult -d ${PATHTODSSP}/${PATHTOMODULESRELATIVETODSSP}

	retval=$?

	! [[ $retval == 0 ]] && exit `echo $retval`

	MODULES+=(`/bin/find /${PATHTODSSP}/${PATHTOMODULESRELATIVETODSSP} -type f \( -iname "*.cil" \) | /bin/cut -d/ -f2-`)

	retval=`echo $?`
done

if [[ -z $MODULES ]]
then
	debug "no modules to list"

	exit 203
fi

for MODULE in ${MODULES[@]}
do
	filetestandresult -r $MODULE

	retval=`echo $?`

	! [[ $retval == 0 ]] && exit `echo $retval`

	filetestandresult -s $MODULE

	retval=`echo $?`

	! [[ $retval == 0 ]] && exit `echo $retval`
done

if [[ -n $MODULES ]]
then
	printf "%s\n" "${MODULES[@]}"
fi

exit `echo $retval`
#EOF
